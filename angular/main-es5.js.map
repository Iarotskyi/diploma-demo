{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/loader/loader.component.ts","webpack:///src/app/loader/loader.component.html","webpack:///src/app/product-list/product-list.component.html","webpack:///src/app/product-list/product-list.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///src/services/data.service.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","LoaderComponent","ProductListComponent","dataService","cd","iteration","logs","timeDifference","initData_","performance","now","startTime","Math","ceil","productAmount","detectChanges","getData","toString","dataObserver","getProducts","clearLogs","environment","production","bootstrapModule","catch","err","console","error","DataService","http","amount","get","providedIn"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'diploma-angular';\n\n  constructor() {}\n}\n","<h2 class=\"app-title\">Angular Application</h2>\n<app-product-list></app-product-list>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport {DataService} from '../services/data.service';\nimport {HttpClientModule} from '@angular/common/http';\nimport { ProductListComponent } from './product-list/product-list.component';\nimport { LoaderComponent } from './loader/loader.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProductListComponent,\n    LoaderComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n  ],\n  providers: [DataService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.css']\n})\nexport class LoaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"loader\">\n  <div class=\"loader-container\">\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n  </div>\n</div>\n","<main>\n  <section class=\"actions\">\n    <button class=\"btn btn-standard\"\n            (click)=\"getProducts(50)\">\n      Load 50 products\n    </button>\n    <button class=\"btn btn-standard\"\n            (click)=\"getProducts(200)\">\n      Load 200 products\n    </button>\n    <button class=\"btn btn-standard\"\n            (click)=\"getProducts(1000)\">\n      Load 1000 products\n    </button>\n    <button class=\"btn btn-standard\"\n            (click)=\"getProducts(5000)\">\n      Load 5000 products\n    </button>\n  </section>\n  <div class=\"divider\"></div>\n  <section class=\"logs\">\n    <h2 class=\"title logs-title\">Time Logs</h2>\n    <button class=\"btn btn-additional\"\n            (click)=\"clearLogs()\">\n      Clear Logs\n    </button>\n    <table class=\"logs-table\">\n      <thead>\n      <tr>\n        <th>â„–</th>\n        <th>Time spent for request (in seconds)</th>\n        <th>Requested quantity of products</th>\n      </tr>\n      </thead>\n      <tbody>\n        <tr class=\"logs-row\"\n            *ngFor=\"let log of logs; let first = first; let index = index\">\n          <td *ngIf=\"!first\">{{index}}</td>\n          <td *ngIf=\"!first\">{{log.timeDifference}}</td>\n          <td *ngIf=\"!first\">{{log.productAmount}}</td>\n        </tr>\n      </tbody>\n    </table>\n  </section>\n  <div class=\"divider\"></div>\n  <section class=\"products\">\n    <h2 class=\"title products-title\">Product List</h2>\n    <div *ngIf=\"(dataObserver | async) as data;\">\n      <div class=\"products-container\">\n        <div class=\"product\" *ngFor=\"let product of data.products\">\n          <img [src]=\"product.image\"\n               class=\"product-image\"\n               alt=\"product-image\">\n          <div class=\"product-id\">\n            <span class=\"product-title\">Product ID:</span>\n            <p class=\"product-content\">{{product.id}}</p>\n          </div>\n          <div class=\"product-name\">\n            <span class=\"product-title\">Product Name:</span>\n            <p class=\"product-content\">{{product.name}}</p>\n          </div>\n          <div class=\"product-description\">\n            <span class=\"product-title\">Product Description</span>\n            <p class=\"product-content\">{{product.description}}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n</main>\n","import {Component, AfterViewChecked, ChangeDetectorRef} from '@angular/core';\nimport {DataService} from '../../services/data.service';\nimport {Observable} from 'rxjs';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})\nexport class ProductListComponent implements AfterViewChecked {\n  dataObserver: Observable<any>;\n  iteration = 0;\n  productAmount: number;\n  logs: Array<any> = [{timeDifference: 0}];\n\n  constructor(private dataService: DataService, private cd: ChangeDetectorRef) {\n    this.initData_();\n  }\n\n  ngAfterViewChecked(): void {\n    const timeDifference = performance.now() - this.logs[this.iteration].startTime;\n    this.logs[this.iteration].timeDifference = Math.ceil(timeDifference) / 1000;\n    this.logs[this.iteration].productAmount = this.productAmount;\n    this.cd.detectChanges();\n  }\n\n  async getProducts(productAmount: number): Promise<any> {\n    this.productAmount = productAmount;\n    this.iteration++;\n    this.logs[this.iteration] = {startTime: performance.now()};\n    this.dataObserver = await this.dataService.getData(productAmount.toString());\n  }\n\n  clearLogs(): void {\n    this.initData_();\n  }\n\n  private initData_(): void {\n    this.iteration = 0;\n    this.logs = [{timeDifference: 0}];\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor(private http: HttpClient) { }\n\n  getData(amount: string): Observable<any> {\n    return this.http.get(`./assets/json/data-${amount}.json`);\n  }\n}\n"]}