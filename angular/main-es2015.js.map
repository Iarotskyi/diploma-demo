{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/loader/loader.component.ts","./src/app/loader/loader.component.html","./src/app/product-list/product-list.component.ts","./src/app/product-list/product-list.component.html","./src/environments/environment.ts","./src/main.ts","./src/services/data.service.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'diploma-angular';\n\n  constructor() {}\n}\n","<h2 class=\"app-title\">Angular Application</h2>\n<app-product-list></app-product-list>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport {DataService} from '../services/data.service';\nimport {HttpClientModule} from '@angular/common/http';\nimport { ProductListComponent } from './product-list/product-list.component';\nimport { LoaderComponent } from './loader/loader.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProductListComponent,\n    LoaderComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n  ],\n  providers: [DataService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.css']\n})\nexport class LoaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"loader\">\n  <div class=\"loader-container\">\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n  </div>\n</div>\n","import {Component, AfterViewChecked, ChangeDetectorRef} from '@angular/core';\nimport {DataService} from '../../services/data.service';\nimport {Observable} from 'rxjs';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})\nexport class ProductListComponent implements AfterViewChecked {\n  dataObserver: Observable<any>;\n  iteration = 0;\n  productAmount: number;\n  logs: Array<any> = [{timeDifference: 0}];\n\n  constructor(private dataService: DataService, private cd: ChangeDetectorRef) {\n    this.initData_();\n  }\n\n  ngAfterViewChecked(): void {\n    const timeDifference = performance.now() - this.logs[this.iteration].startTime;\n    this.logs[this.iteration].timeDifference = Math.ceil(timeDifference) / 1000;\n    this.logs[this.iteration].productAmount = this.productAmount;\n    this.cd.detectChanges();\n  }\n\n  async getProducts(productAmount: number): Promise<any> {\n    this.productAmount = productAmount;\n    this.iteration++;\n    this.logs[this.iteration] = {startTime: performance.now()};\n    this.dataObserver = await this.dataService.getData(productAmount.toString());\n  }\n\n  clearLogs(): void {\n    this.initData_();\n  }\n\n  private initData_(): void {\n    this.iteration = 0;\n    this.logs = [{timeDifference: 0}];\n  }\n}\n","<main>\n  <section class=\"actions\">\n    <button class=\"btn btn-standard\"\n            (click)=\"getProducts(50)\">\n      Load 50 products\n    </button>\n    <button class=\"btn btn-standard\"\n            (click)=\"getProducts(200)\">\n      Load 200 products\n    </button>\n    <button class=\"btn btn-standard\"\n            (click)=\"getProducts(1000)\">\n      Load 1000 products\n    </button>\n    <button class=\"btn btn-standard\"\n            (click)=\"getProducts(5000)\">\n      Load 5000 products\n    </button>\n  </section>\n  <div class=\"divider\"></div>\n  <section class=\"logs\">\n    <h2 class=\"title logs-title\">Time Logs</h2>\n    <button class=\"btn btn-additional\"\n            (click)=\"clearLogs()\">\n      Clear Logs\n    </button>\n    <table class=\"logs-table\">\n      <thead>\n      <tr>\n        <th>â„–</th>\n        <th>Time spent for request (in seconds)</th>\n        <th>Requested quantity of products</th>\n      </tr>\n      </thead>\n      <tbody>\n        <tr class=\"logs-row\"\n            *ngFor=\"let log of logs; let first = first; let index = index\">\n          <td *ngIf=\"!first\">{{index}}</td>\n          <td *ngIf=\"!first\">{{log.timeDifference}}</td>\n          <td *ngIf=\"!first\">{{log.productAmount}}</td>\n        </tr>\n      </tbody>\n    </table>\n  </section>\n  <div class=\"divider\"></div>\n  <section class=\"products\">\n    <h2 class=\"title products-title\">Product List</h2>\n    <div *ngIf=\"(dataObserver | async) as data;\">\n      <div class=\"products-container\">\n        <div class=\"product\" *ngFor=\"let product of data.products\">\n          <img [src]=\"product.image\"\n               class=\"product-image\"\n               alt=\"product-image\">\n          <div class=\"product-id\">\n            <span class=\"product-title\">Product ID:</span>\n            <p class=\"product-content\">{{product.id}}</p>\n          </div>\n          <div class=\"product-name\">\n            <span class=\"product-title\">Product Name:</span>\n            <p class=\"product-content\">{{product.name}}</p>\n          </div>\n          <div class=\"product-description\">\n            <span class=\"product-title\">Product Description</span>\n            <p class=\"product-content\">{{product.description}}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n</main>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor(private http: HttpClient) { }\n\n  getData(amount: string): Observable<any> {\n    return this.http.get(`./assets/json/data-${amount}.json`);\n  }\n}\n"],"sourceRoot":"webpack:///"}